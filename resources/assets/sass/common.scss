@import "~bulma/bulma";

* {
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
}

$sizeUnit: rem;
$marginKey: 'has-margin';
$paddingKey: 'has-padding';
$separator: '-';
$marginOrPaddingSizes: (
  ('0', 0),
  ('1', 0.125),
  ('2', 0.25),
  ('3', 0.5),
  ('4', 1),
  ('5', 2),
  ('6', 4),
  ('7', 8),
);
$positions: (
  ('top', 'top'),
  ('right', 'right'),
  ('bottom', 'bottom'),
  ('left', 'left'),
);

@function sizeValue($key, $value) {
  @return if($key == 'none', 0, $value + $sizeUnit);
}

@each $size in $marginOrPaddingSizes {
  $sizeKey: nth($size, 1);
  $sizeValue: nth($size, 2);

  .#{$marginKey}#{$separator}#{$sizeKey} {
    margin: sizeValue($sizeKey, $sizeValue) !important;
  }
  .#{$paddingKey}#{$separator}#{$sizeKey} {
    padding: sizeValue($sizeKey, $sizeValue) !important;
  }

  @each $position in $positions {
    $posKey: nth($position, 1);
    $posValue: nth($position, 2);
    .#{$marginKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
        margin-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;
    }
    .#{$paddingKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
        padding-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;

    }
  }
}

@each $position in $positions {
  $posKey: nth($position, 1);
  $posValue: nth($position, 2);
  .#{$marginKey}#{$separator}#{$posKey}#{$separator}auto {
    margin-#{$posValue}: auto !important;
  }
  .#{$paddingKey}#{$separator}#{$posKey}#{$separator}auto {
    padding-#{$posValue}: auto !important;
  }
}

.#{$marginKey}#{$separator}auto {
  margin: auto;
}
.#{$paddingKey}#{$separator}auto {
  padding: auto;
}